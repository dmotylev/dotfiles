""" Load plugins
if empty(glob('~/.vim/autoload/plug.vim'))
        silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
        autocmd VimEnter * PlugInstall | source $MYVIMRC
endif

call plug#begin()

if has("gui_vimr")
else
    Plug 'tmux-plugins/vim-tmux-focus-events'
endif

Plug 'tpope/vim-sensible'
" Plug 'altercation/vim-colors-solarized'
Plug 'NLKNguyen/papercolor-theme'
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
Plug 'mhinz/vim-signify'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-obsession'
Plug 'ctrlpvim/ctrlp.vim'

Plug 'edkolev/tmuxline.vim'

Plug 'fatih/vim-go', {'for': ['go']}
Plug 'rust-lang/rust.vim', {'for': ['rust']}
Plug 'hashivim/vim-terraform', {'for': ['terraform']}
Plug 'neoclide/coc.nvim', {'branch': 'release'}

call plug#end()

function! SyncColorscheme()
    if !has("gui_vimr")
        set background=light
    else
        if system("defaults read -g AppleInterfaceStyle") =~ '^Dark'
            set background=dark   " for the dark version of the theme
        else
            set background=light  " for the light version of the theme
        endif
    endif

    if globpath(&rtp, 'colors/solarized.vim') != ""
        if has("gui_vimr")
        else
            let g:solarized_termtrans=1
        endif

        colorscheme solarized

        highlight VertSplit ctermbg=NONE guibg=NONE
        highlight SignColumn ctermbg=NONE cterm=NONE guibg=NONE gui=NONE
    endif
    colorscheme PaperColor
endfunction

call SyncColorscheme()

if empty(glob('~/.vim/plugged/vim-signify'))
    set updatetime=100
endif

set tabstop=4
set shiftwidth=4
set expandtab

" These two options, when set together, will make /-style searches
" case-sensitive only if there is a capital letter in the search expression.
" *-style searches continue to be consistently case-sensitive.
set ignorecase
set smartcase

" Warning: Line numbers in gutter make vim slow
nmap <Leader>n :set invrelativenumber<CR>
nmap <Leader>N :set invnumber<CR>

if !empty(glob('~/.vim/plugged/ctrlp'))
    let g:ctrlp_cmd='CtrlP'
    let g:ctrlp_working_path_mode = 'ra'
    let g:ctrlp_switch_buffer = 'Et'
    let g:ctrlp_user_command = {
            \ 'types': {
            \   1:['.git', 'cd %s && git ls-files -co --exclude-standard']
            \ },
            \ 'fallback': 'ag %s -l --nocolor -g ""'
            \ }
endif

if !empty(glob('~/.vim/plugged/vim-airline'))
    let g:airline_powerline_fonts = 1

    let g:airline#extensions#tmuxline#enabled = 0
    let g:airline#extensions#tabline#enabled = 1
    let g:airline#extensions#tabline#formatter = 'unique_tail_improved'

    let g:airline_theme='papercolor'
endif

