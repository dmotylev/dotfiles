#!/bin/sh
NGINX_HOME=$(brew --prefix nginx)
NGINX=${NGINX_HOME}/sbin/nginx
NGINX_PID=`$NGINX -V 2>&1 | egrep -o "pid-path=.+.pid" | cut -d= -f2`

startup() {
    if [ -f ${NGINX_PID} ] ; then
        echo "${NGINX_PID} exists"
        exit
    fi
    ${NGINX}    
}

shutdown() {
    [ -f ${NGINX_PID} ] && kill `cat ${NGINX_PID}`
}

status() {
    ${NGINX} -V
    if [ -f ${NGINX_PID} ] ; then
        MASTER_PID=`cat ${NGINX_PID}`
        WORKER_PIDS=`ps ax -o ppid,pid | grep -E "^${MASTER_PID}" | awk '{print $2}' |xargs -I @ echo -n "@,"`
        ps x -p ${WORKER_PIDS}${MASTER_PID} -o pid,ppid,user,%cpu,vsz,wchan,command
        if [ $? != 0 ] ; then
            echo "PID file exists but nginx is not running"
            rm ${NGINX_PID}
        fi
    else
        echo "nginx is not running"
    fi
}

reconfigure() {
    [ -f ${NGINX_PID} ] && kill -s HUP `cat ${NGINX_PID}`
}

rotatelogs() {
    for f in `find ${NGINX_HOME}/logs -type f -name "*.log"`; do
        mv ${f} ${f}.1
    done
    [ -f ${NGINX_PID} ] && kill -s USR1 `cat ${NGINX_PID}`
}

clearlogs() {
    find ${NGINX_HOME}/logs -type f \( -name "*.log" -o -name "*.log.1" \) | xargs rm
    [ -f ${NGINX_PID} ] && kill -s USR1 `cat ${NGINX_PID}`
}

validate() {
    ${NGINX} -t
}

case $1 in
    start)
        startup
    ;;
    stop)
        shutdown
    ;;
    reconfigure)
        reconfigure
    ;;
    status)
        status
    ;;
    clearlogs)
        clearlogs
    ;;
    rotatelogs)
        rotatelogs
    ;;
    validate)
        validate
    ;;
    *)
        echo "Usage:"
        echo "    `basename $0` {start|stop|status|reconfigure|clearlogs|rotatelogs|validate}"
esac
