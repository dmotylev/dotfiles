set nocompatible               " be iMproved
filetype off                   " required!

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim/
call plug#begin()
Plug 'tpope/vim-obsession'
Plug 'SirVer/ultisnips'
Plug 'fatih/vim-go'
Plug 'Valloric/YouCompleteMe', { 'do': './install.sh --gocode-completer' }
Plug 'kien/ctrlp.vim'
Plug 'scrooloose/nerdtree'
Plug 'mattn/emmet-vim'
Plug 'itchyny/lightline.vim'
Plug 'tpope/vim-fugitive'
Plug 'mhinz/vim-signify'
Plug 'majutsushi/tagbar'
Plug 'cakebaker/scss-syntax.vim'
Plug 'scrooloose/syntastic'
Plug 'chase/vim-ansible-yaml'
Plug 'groenewege/vim-less'
Plug 'Chiel92/vim-autoformat'
Plug 'dagwieers/asciidoc-vim'
Plug 'Glench/Vim-Jinja2-Syntax'
Plug 'nanotech/jellybeans.vim'
Plug 'edkolev/tmuxline.vim'
Plug 'tmux-plugins/vim-tmux'
Plug 'tmux-plugins/vim-tmux-focus-events'
Plug 'freitass/todo.txt-vim'
Plug 'jszakmeister/vim-togglecursor'
" All of your Plugins must be added before the following line
call plug#end()

" generic options
syn on
set wrap
set ts=4
set title
set shortmess=atIO
set visualbell
set t_Co=256
set fillchars=vert:⏐
" Allow move the cursor left/right to move to the previous/next line when the cursor is on the first/last character in the line.
set ww=<,>,[,]
set mouse=a
set backspace=indent,eol,start

filetype plugin indent on     " required!

" Highlight search terms
set hlsearch
set incsearch " ...dynamically as they are typed.
" If the search term highlighting gets annoying, set a key to switch it off temporarily:
nmap <silent> <Leader>n :silent :nohlsearch<CR>
" The following will make tabs and trailing spaces visible when requested:
set listchars=tab:•·,trail:·,eol:$,extends:❯,precedes:❮
set fillchars=vert:⏐
set showbreak=⎖\
nmap <silent> <Leader>S :set nolist!<CR>
" The current buffer can be put to the background without writing to disk;
" When a background buffer becomes current again, marks and undo-history are remembered.
set hidden
" By default, Vim only remembers the last 20 commands and search patterns entered. It’s nice to boost this up:
set history=1000
" By default, pressing <TAB> in command mode will choose the first possible completion with no indication of how many others there might be. The following configuration lets you see what your other options are:
set wildmenu
" To have the completion behave similarly to a shell, i.e. complete only up to the point of ambiguity (while still showing you what your options are)
set wildmode=list:longest
" These two options, when set together, will make /-style searches case-sensitive only if there is a capital letter in the search expression. *-style searches continue to be consistently case-sensitive.
set ignorecase
set smartcase
nmap * /\C\<<C-R>=expand('<cword>')<CR>\><CR>
nmap # ?\C\<<C-R>=expand('<cword>')<CR>\><CR>
nmap <Leader>s :%s/\C\<<C-R>=expand('<cword>')<CR>\>//g<Left><Left>
" Setting the option below will start the scrolling three lines before the border, keeping more context around where you’re working.
set scrolloff=3
" Swap files and backups are annoying but can save you a lot of trouble. Rather than spread them all around your filesystem, isolate them to a single directory
set backupdir=~/.vim/tmp//,/var/tmp//,/tmp//
set directory=~/.vim/tmp//,/var/tmp//,/tmp//
set wildignore+=*.o,*.obj,.git,*.6,*.out,*.a,_testmain.go
" setup omnicomplete
set omnifunc=syntaxcomplete#Complete
set completeopt=menuone,longest
set pumheight=15


" point grep command to ag
set grepprg=ag\ --vimgrep\ $*
" and adjust grep format
set grepformat=%f:%l:%c:%m

" setup supertab completion
let g:SuperTabDefaultCompletionType = "<c-x><c-o>"

" setup vim-go
let g:go_fmt_command = "goimports"
let g:go_fmt_autosave = 1
let g:go_fmt_fail_silently = 1
let g:go_highlight_functions = 1
let g:go_highlight_methods = 1
let g:go_highlight_structs = 1
let g:go_auto_type_info = 1

au FileType go nmap <leader>r <Plug>(go-run)
au FileType go nmap <leader>b <Plug>(go-build)
au FileType go nmap <leader>t <Plug>(go-test)
au FileType go nmap <leader>c <Plug>(go-coverage)
au FileType go nmap <Leader>e <Plug>(go-rename)

" setup CtrlP
let g:ctrlp_cmd='CtrlPMixed'
let g:ctrlp_mruf_max = 3
let g:ctrlp_mruf_relative = 1
let g:ctrlp_working_path_mode = 'r'
let g:ctrlp_switch_buffer = 'Et'
let g:ctrlp_lazy_update = 1
let g:ctrlp_user_command = {
	\ 'types': {
		\ 1:['.git', 'cd %s && git ls-files']
	\ },
	\ 'fallback': 'ag %s -l --nocolor -g ""'
	\}

" set up NERDtree
map <silent> <C-n> :NERDTreeToggle<CR>
let g:NERDTreeWinSize=40

set laststatus=2
let g:lightline = {
      \ 'colorscheme': 'wombat',
      \ 'active': {
      \   'left': [ [ 'mode', 'paste' ],
      \             [ 'fugitive', 'readonly', 'filename', 'modified' ] ]
      \ },
      \ 'component': {
      \   'readonly': '%{&filetype=="help"?"":&readonly?"⭤":""}',
      \   'modified': '%{&filetype=="help"?"":&modified?"+":&modifiable?"":"-"}',
      \   'fugitive': '%{exists("*fugitive#head")?fugitive#head():""}'
      \ },
      \ 'component_visible_condition': {
      \   'readonly': '(&filetype!="help"&& &readonly)',
      \   'modified': '(&filetype!="help"&&(&modified||!&modifiable))',
      \   'fugitive': '(exists("*fugitive#head") && ""!=fugitive#head())'
      \ },
      \ 'separator': { 'left': '⮀', 'right': '⮂' },
      \ 'subseparator': { 'left': '⮁', 'right': '⮃' }
      \ }
set noshowmode

let g:signify_sign_overwrite = 0

let g:syntastic_error_symbol='Er'
let g:syntastic_style_error_symbol='Es'
let g:syntastic_warning_symbol='Wr'
let g:syntastic_style_warning_symbol='Ws'
" configure syntastic syntax checking to check on open as well as save
let g:syntastic_check_on_open=1
let g:syntastic_html_tidy_ignore_errors=[" proprietary attribute \"ng-", " proprietary attribute \"st-"]

let g:ansible_options = {'ignore_blank_lines': 0}

colorscheme jellybeans

map <silent> <C-\> :TagbarToggle<CR>
let g:tagbar_width=40
let g:tagbar_type_go = {
	\ 'ctagstype': 'go',
	\ 'kinds' : [
		\ 'p:package',
		\ 'i:imports:1',
		\ 'c:constants',
		\ 'v:variables',
		\ 't:types',
		\ 'n:interfaces',
		\ 'w:fields',
		\ 'e:embedded',
		\ 'm:methods',
		\ 'r:constructor',
		\ 'f:functions'
	\ ],
	\ 'sro' : '.',
	\ 'kind2scope' : {
		\ 't' : 'ctype',
		\ 'n' : 'ntype'
	\ },
	\ 'scope2kind' : {
		\ 'ctype' : 't',
		\ 'ntype' : 'n'
	\ },
	\ 'ctagsbin' : 'gotags',
	\ 'ctagsargs' : '-sort -silent'
\ }

let g:user_emmet_settings = {
	\ 'indentation' : '    '
\}

highlight VertSplit term=standout ctermfg=234 ctermbg=233
highlight Search cterm=none gui=none ctermbg=6 ctermfg=17

" Open new split panes to right and bottom, which feels more natural
set splitbelow
set splitright

au BufRead,BufNewFile Vagrantfile set filetype=ruby

highlight SignColumn ctermbg=234

set relativenumber
set number

" habit breaking, habit making
noremap <Up> <NOP>
noremap <Down> <NOP>
noremap <Left> <NOP>
noremap <Right> <NOP>
